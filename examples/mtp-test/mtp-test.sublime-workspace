{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"objc",
				"object_id"
			],
			[
				"0xff",
				"0xFFFFFFFFUL"
			],
			[
				"ready",
				"readyframe"
			],
			[
				"CUST",
				"CUSTOM_320x480"
			],
			[
				"image_",
				"image_offset_x"
			],
			[
				"frame",
				"frame_buffer"
			],
			[
				"_vsync",
				"_vsyncPin"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"printf_d",
				"printf_debug_init"
			],
			[
				"trans",
				"_transferWriteFill"
			],
			[
				"Serial",
				"serialEvent1"
			],
			[
				"IRQ",
				"IRQ_PRIORITY"
			],
			[
				"force",
				"force_boot_protocol"
			],
			[
				"control",
				"control_queued"
			],
			[
				"id",
				"idVendor"
			],
			[
				"VA",
				"VALID_PAGE4"
			],
			[
				"oldpage",
				"oldpageaddress_end"
			],
			[
				"valid",
				"validpage"
			],
			[
				"PAGE_",
				"PAGE_SIZE"
			],
			[
				"address",
				"addressvalue"
			],
			[
				"addres",
				"addressvalue"
			],
			[
				"Vir",
				"VirtAddress"
			],
			[
				"pack",
				"packet_length_out"
			],
			[
				"length",
				"length_before_crc"
			],
			[
				"pa",
				"packet_length_in"
			],
			[
				"rxpacket",
				"rxpacket_in"
			],
			[
				"read",
				"read_Rx_impl"
			],
			[
				"rxp",
				"rxpacket_in"
			],
			[
				"len",
				"length_adjust"
			],
			[
				"tx",
				"txpacket_in"
			],
			[
				"COMM",
				"COMM_TX_FAIL"
			],
			[
				"txp",
				"txpacket"
			],
			[
				"txP",
				"txpacket_in"
			],
			[
				"mod",
				"model_number"
			],
			[
				"item",
				"item_pointer"
			],
			[
				"count",
				"count_ids_"
			],
			[
				"add",
				"add_if_not_found"
			],
			[
				"fi",
				"findParam"
			],
			[
				"ite",
				"item_buffer_pointer"
			],
			[
				"digit",
				"digitalWrite"
			],
			[
				"LE",
				"LED_BUILTIN"
			],
			[
				"ser",
				"servo_index"
			],
			[
				"report",
				"report_any_dxl_errors"
			],
			[
				"sti",
				"still_moving"
			],
			[
				"servo",
				"servo_list"
			],
			[
				"cou",
				"count_ids_"
			],
			[
				"nex",
				"next_item_pointer"
			],
			[
				"clear",
				"clearParam"
			],
			[
				"data",
				"data_length_"
			],
			[
				"buffer",
				"buffer_size"
			],
			[
				"return",
				"return_value"
			],
			[
				"ti",
				"timeout_ms"
			],
			[
				"buff",
				"buffer_size"
			],
			[
				"SER",
				"SERIAL_BUFFER_SIZE"
			],
			[
				"_",
				"_uart_num"
			],
			[
				"SERI",
				"SERIAL_TX_BUFFER_SIZE"
			],
			[
				"cb",
				"cbLeft"
			],
			[
				"tx_b",
				"tx_buffer_aligned"
			],
			[
				"size",
				"size_t"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"time",
				"time_since_last_msg_received"
			],
			[
				"ILI9341_",
				"ILI9341_YELLOW"
			],
			[
				"pu",
				"publishVelocityCmd"
			],
			[
				"sta",
				"state_changed_"
			],
			[
				"Tur",
				"turtlebot3_msgs"
			],
			[
				"advertis",
				"advertised_"
			],
			[
				"ILI",
				"ILI9341_t3n"
			],
			[
				"_dma",
				"_dma_count_remaining"
			],
			[
				"sou",
				"sourceBuffer"
			],
			[
				"0x0",
				"0x041b"
			],
			[
				"g_serv",
				"g_servo_index_voltage"
			],
			[
				"DXL_GOA",
				"DXL_X_GOAL_VELOCITY"
			],
			[
				"Re",
				"ReportAnyErrors"
			],
			[
				"servo_",
				"servo_info_t"
			]
		]
	},
	"buffers":
	[
		{
			"file": "mtp-test.ino",
			"settings":
			{
				"buffer_size": 17938,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/MTP.h",
			"settings":
			{
				"buffer_size": 7758,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/MTP.cpp",
			"settings":
			{
				"buffer_size": 87694,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/wiring.h",
			"settings":
			{
				"buffer_size": 7456,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.cpp",
			"settings":
			{
				"buffer_size": 29460,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.h",
			"settings":
			{
				"buffer_size": 15927,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 4 files for \"sd_remove\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\MTP_t4\\src\\Storage.cpp:\n  176      // first remove old index file\n  177      mtp_lock_storage(true);\n  178:     sd_remove(0,indexFile);\n  179      mtp_lock_storage(false);\n  180  \n  ...\n  304    while(f2=f1.openNextFile())\n  305    { sprintf(tname,\"%s/%s\",file,f2.name());\n  306:     if(f2.isDirectory()) removeFile(store,tname); else sd_remove(store,tname);\n  307    }\n  308    sd_rmdir(store,file);\n  ...\n  548      else if(!p1o.isdir)\n  549      { if(sd_copy(p1o.store,oldName, p2o.store, newName)) \n  550:       { sd_remove(p2o.store,oldName); return true; } else { DBG_FAIL_MACRO; goto fail;}\n  551      }\n  552      else\n  ...\n  703          { \n  704            if(!sd_copy(store0, tmp0Name, store1, tmp1Name)) {DBG_FAIL_MACRO; return false;}\n  705:           if(!sd_remove(store0,tmp0Name)) {DBG_FAIL_MACRO; return false;}\n  706          }\n  707        }\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\MTP_t4\\src\\Storage.h:\n   97      bool sd_mkdir(uint32_t store, char *filename) {  return sdx[store]->mkdir(filename);  }\n   98      bool sd_rename(uint32_t store, char *oldfilename, char *newfilename) { return sdx[store]->rename(oldfilename,newfilename);  }\n   99:     bool sd_remove(uint32_t store, const char *filename) { return sdx[store]->remove(filename);  }\n  100      bool sd_rmdir(uint32_t store, char *filename) { return sdx[store]->rmdir(filename);  }\n  101  \n\n5 matches across 2 files\n\n\nSearching 4 files for \"usb_mtp_sendevent(\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\MTP_t4\\src\\MTP.cpp:\n 2020    #define EVENT_TX_PACKET_LIMIT 4\n 2021  \n 2022:     int usb_mtp_sendEvent(const void *buffer, uint32_t len, uint32_t timeout)\n 2023      {\n 2024        usb_packet_t *event_packet;\n ....\n 2123      }\n 2124  \n 2125:     int usb_mtp_sendEvent(const void *buffer, uint32_t len, uint32_t timeout)\n 2126      {\n 2127        transfer_t *xfer = tx_event_transfer;\n ....\n 2149      event.params[1]=0;\n 2150      event.params[2]=0;\n 2151:     return usb_mtp_sendEvent((const void *) &event, event.len, EVENT_TIMEOUT);\n 2152    }\n 2153    int MTPD::send_Event(uint16_t eventCode, uint32_t p1)\n ....\n 2161      event.params[1]=0;\n 2162      event.params[2]=0;\n 2163:     return usb_mtp_sendEvent((const void *) &event, event.len, EVENT_TIMEOUT);\n 2164    }\n 2165    int MTPD::send_Event(uint16_t eventCode, uint32_t p1, uint32_t p2)\n ....\n 2173      event.params[1]=p2;\n 2174      event.params[2]=0;\n 2175:     return usb_mtp_sendEvent((const void *) &event, event.len, EVENT_TIMEOUT);\n 2176    }\n 2177    int MTPD::send_Event(uint16_t eventCode, uint32_t p1, uint32_t p2, uint32_t p3)\n ....\n 2185      event.params[1]=p2;\n 2186      event.params[2]=p3;\n 2187:     return usb_mtp_sendEvent((const void *) &event, event.len, EVENT_TIMEOUT);\n 2188    }\n 2189  \n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\MTP_t4\\src\\MTP.h:\n   33  #include \"core_pins.h\"\n   34  #include \"usb_dev.h\"\n   35: extern \"C\" \tint usb_mtp_sendEvent(const void *buffer, uint32_t len, uint32_t timeout);\n   36  \n   37  #include \"Storage.h\"\n\n7 matches across 2 files\n\n\nSearching 18 files for \"lfs_file_write\"\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS\\src\\LittleFS.h:\n   64  \t\tif (!file) return 0;\n   65  \t\t//Serial.println(\" is regular file\");\n   66: \t\treturn lfs_file_write(lfs, file, buf, size);\n   67  \t}\n   68  \tvirtual int peek() {\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS\\src\\littlefs\\lfs.c:\n 2686                  }\n 2687  \n 2688:                 res = lfs_file_write(lfs, file, &data, 1);\n 2689                  if (res < 0) {\n 2690                      return res;\n ....\n 2870  }\n 2871  \n 2872: lfs_ssize_t lfs_file_write(lfs_t *lfs, lfs_file_t *file,\n 2873          const void *buffer, lfs_size_t size) {\n 2874:     LFS_TRACE(\"lfs_file_write(%p, %p, %p, %\"PRIu32\")\",\n 2875              (void*)lfs, (void*)file, buffer, size);\n 2876      LFS_ASSERT(file->flags & LFS_F_OPENED);\n ....\n 2884          int err = lfs_file_flush(lfs, file);\n 2885          if (err) {\n 2886:             LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2887              return err;\n 2888          }\n ....\n 2895      if (file->pos + size > lfs->file_max) {\n 2896          // Larger than file limit?\n 2897:         LFS_TRACE(\"lfs_file_write -> %d\", LFS_ERR_FBIG);\n 2898          return LFS_ERR_FBIG;\n 2899      }\n ....\n 2905  \n 2906          while (file->pos < pos) {\n 2907:             lfs_ssize_t res = lfs_file_write(lfs, file, &(uint8_t){0}, 1);\n 2908              if (res < 0) {\n 2909:                 LFS_TRACE(\"lfs_file_write -> %\"PRId32, res);\n 2910                  return res;\n 2911              }\n ....\n 2921          if (err) {\n 2922              file->flags |= LFS_F_ERRED;\n 2923:             LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2924              return err;\n 2925          }\n ....\n 2938                      if (err) {\n 2939                          file->flags |= LFS_F_ERRED;\n 2940:                         LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2941                          return err;\n 2942                      }\n ....\n 2953                  if (err) {\n 2954                      file->flags |= LFS_F_ERRED;\n 2955:                     LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2956                      return err;\n 2957                  }\n ....\n 2974                  }\n 2975                  file->flags |= LFS_F_ERRED;\n 2976:                 LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2977                  return err;\n 2978              }\n ....\n 2983              if (err) {\n 2984                  file->flags |= LFS_F_ERRED;\n 2985:                 LFS_TRACE(\"lfs_file_write -> %d\", err);\n 2986                  return err;\n 2987              }\n ....\n 2997  \n 2998      file->flags &= ~LFS_F_ERRED;\n 2999:     LFS_TRACE(\"lfs_file_write -> %\"PRId32, size);\n 3000      return size;\n 3001  }\n ....\n 3081          // fill with zeros\n 3082          while (file->pos < size) {\n 3083:             lfs_ssize_t res = lfs_file_write(lfs, file, &(uint8_t){0}, 1);\n 3084              if (res < 0) {\n 3085                  LFS_TRACE(\"lfs_file_truncate -> %\"PRId32, res);\n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS\\src\\littlefs\\lfs.h:\n  533  //\n  534  // Returns the number of bytes written, or a negative error code on failure.\n  535: lfs_ssize_t lfs_file_write(lfs_t *lfs, lfs_file_t *file,\n  536          const void *buffer, lfs_size_t size);\n  537  \n\nC:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS\\src\\littlefs\\README.md:\n   77      boot_count += 1;\n   78      lfs_file_rewind(&lfs, &file);\n   79:     lfs_file_write(&lfs, &file, &boot_count, sizeof(boot_count));\n   80  \n   81      // remember the storage is not updated until the file is closed successfully\n\n17 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 6773,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/littlefs/lfs.c",
			"settings":
			{
				"buffer_size": 152326,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.h",
			"settings":
			{
				"buffer_size": 9267,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.cpp",
			"settings":
			{
				"buffer_size": 23882,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/GitHub/cores/teensy4/FS.h",
			"settings":
			{
				"buffer_size": 5008,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/modifications_for_cores_teensy4/usb_desc.h",
			"settings":
			{
				"buffer_size": 1871,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/Teensy.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/Teensy.sublime-build",
					""
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Clean"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"New Sketch"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Verify"
				],
				[
					"Packages/User/Teensy.sublime-build",
					"Tools Set"
				]
			],
			[
				"Packages/User/Teensy.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"package control remov",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"s",
				"Sort Lines"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 452.0
	},
	"console":
	{
		"height": 185.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/GitHub/MTP_t4/examples/mtp-test",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/modifications_for_cores_teensy4",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/modifications_for_teensy_avr",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src",
		"/C/Users/kurte/Documents/Arduino/libraries/SD",
		"/C/Users/kurte/Documents/Arduino/libraries/SdFs"
	],
	"file_history":
	[
		"/D/GitHub/MTP_t4/examples/mtp-test/mtp-test.sublime-project",
		"/C/arduino-1.8.13/hardware/teensy/avr/libraries/Time/time.h",
		"/C/Users/kurte/AppData/Local/Temp/wz2a25/mtp-test.ino",
		"/C/Users/kurte/AppData/Local/Temp/wzbfb4/mtp-test.ino",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.cpp",
		"/C/Users/kurte/Documents/Arduino/libraries/SD/src/SD.h",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.h",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/modifications_for_cores_teensy4/usb_desc.h",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/littlefs/lfs.c",
		"/C/arduino-1.8.10/hardware/teensy/avr/libraries/SD/examples/CardInfo/CardInfo.ino",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS_NAND.cpp",
		"/C/Users/kurte/Desktop/MTP-master/src/MTP.cpp",
		"/C/Users/kurte/Desktop/MTP-master/mtp-test.ino",
		"/C/Users/kurte/Desktop/MTP-master/src/MTP.h",
		"/C/Users/kurte/Desktop/MTP-master/src/Storage.cpp",
		"/C/Users/kurte/Desktop/MTP-master/src/Storage.h",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.cpp",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.h",
		"/D/GitHub/MTP_t4/examples/mtp-test/Compile.cmd",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.cpp.bak",
		"/D/GitHub/MTP_t4_WMXZ/examples/mtp-test/mtp-test.ino",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/examples/mtp-test/mtp-test.ino",
		"/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.h.bak",
		"/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS_NAND.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_mtp.c",
		"/D/GitHub/cores/teensy4/usb_mtp.h",
		"/D/GitHub/cores/teensy4/usb_mtp.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/wiring.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_rawhid.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/Stream.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_midi.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_flightsim.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_seremu.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy3/usb_desc.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy3/usb_desc.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/yield.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_serial.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/debug/printf.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/debugprintf.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_desc.c",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_desc.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_mtp.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/pins_arduino.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_audio.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/usb_dev.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/EventResponder.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/EventResponder.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores_release/teensy4/EventResponder.h",
		"/C/Users/kurte/Documents/Arduino/Teensy Tests/CSI_41_OV7670_ILI/CSI_41_OV7670_ILI.sublime-project",
		"/C/arduino-1.8.13/hardware/tools/arm/arm-none-eabi/include/sys/stat.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/keywords.txt",
		"/C/Users/kurte/Documents/Arduino/Teensy Tests/CSI_41_main/CSI_41_main.sublime-project",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/examples/DemoSauce/TwistyText.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/examples/DemoSauce/TransitionSquares.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/examples/DemoSauce/TransitionDither.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/examples/DemoSauce/PlasmaYellow.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/examples/DemoSauce/PlasmaCloud.h",
		"/C/Users/kurte/Documents/Arduino/libraries/ILI9341_t3n/src/ILI9341_t3n.h",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_CSI_41_main.ino/sketch/CSI_41.cpp",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_CSI_41_main.ino/sketch/OV7670_MB.cpp",
		"/D/GitHub/Arduino_OV767X/examples/CameraDisplay_ili9341_t3n/Compile.cmd",
		"/C/Users/kurte/Documents/Arduino/libraries/Arduino_OV767X/library.properties",
		"/C/Users/kurte/Documents/Arduino/libraries/Arduino_OV767X/src/OV767X.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/libraries/SPI/SPI.cpp",
		"/D/GitHub/Arduino_OV767X/examples/CameraDisplay_ili9341_t3n/CameraDisplay_ili9341_t3n.sublime-project",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_CameraDisplay_ili9341_t3n.ino/foo",
		"/C/Users/kurte/AppData/Local/Temp/UFC_Driver.ino",
		"/D/GitHub/teensy4/README.md",
		"/C/Users/kurte/Documents/Arduino/libraries/Arduino_OV767X/src/Arduino_OV767X.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/libraries/PulsePosition/PulsePosition.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/libraries/ILI9488_t3/src/ILI9488_t3.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/AudioStream.cpp",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/pwm.c",
		"/C/Users/kurte/Documents/Arduino/libraries/Ra8876LiteTeensy/src/RA8876_t3.cpp",
		"/D/GitHub/teensy_loader_cli/teensy_loader_cli.c",
		"/D/GitHub/teensy_loader_cli/README.md",
		"/C/Users/kurte/AppData/Local/Temp/wz349d/L6470-AutoDriver-master/Libraries/Arduino/src/SparkFunAutoDriver.cpp",
		"/C/Users/kurte/AppData/Local/Temp/scp32403/home/ubuntu/Documents/teensy_loader_cli/teensy_loader_cli.c",
		"/C/Users/kurte/AppData/Local/Temp/wzd0a4/firmware_slave/firmware_slave.ino",
		"/D/GitHub/Tset/tset.cmd1",
		"/D/GitHub/logic2-examples/README.md",
		"/C/Users/kurte/AppData/Local/Temp/wz2008/cactus_io_BME280_I2C/cactus_io_BME280_I2C.h",
		"/C/Users/kurte/AppData/Local/Temp/wzf01e/cactus_io_BME280_I2C/cactus_io_BME280_I2C.cpp",
		"/C/Users/kurte/AppData/Local/Temp/wzf01e/cactus_io_BME280_I2C/.DS_Store",
		"/C/Users/kurte/Desktop/usbhost_shield2_XBoxOne_bind.csv",
		"/C/Users/kurte/Desktop/SparkFun_SerLCD_Arduino_Library-master/examples/Example1-HelloWorld/Example1-HelloWorld.ino",
		"/C/Users/kurte/Desktop/SparkFun_SerLCD_Arduino_Library-master/src/SerLCD.h",
		"/C/Users/kurte/Documents/Arduino_Old_Stuff/Orion/Razor_Rover/Razor_Rover.ino",
		"/C/Users/kurte/AppData/Local/Temp/wz13f2/RoboClaw/RoboClaw.h",
		"/C/Users/kurte/Desktop/usbhost_shield2_XBoxOne_bind.txt",
		"/C/arduino-1.8.13/hardware/arduino/avr/libraries/Wire/src/Wire.h",
		"/C/Users/kurte/Documents/Arduino/Teensy Tests/T4X_SerialHalfDuplexEcho/T4X_SerialHalfDuplexEcho.ino",
		"/C/Users/kurte/AppData/Local/Arduino15/packages/arduino/hardware/samd/1.8.8/libraries/Wire/Wire.cpp",
		"/C/Users/kurte/AppData/Local/Arduino15/packages/arduino/hardware/samd/1.8.8/libraries/Wire/Wire.h",
		"/C/Users/kurte/AppData/Local/Temp/wza759/RoboClaw/RoboClaw.cpp",
		"/D/GitHub/Adafruit_VL53L0X/examples/vl53l0x_multi_extended/vl53l0x_multi_extended.sublime-workspace",
		"/C/Users/kurte/AppData/Local/Temp/Tree_Show.txt",
		"/C/Users/kurte/Desktop/Original_RadioHead/RF24configs/README",
		"/C/Users/kurte/Desktop/Original_RadioHead/MGOSCompat/README",
		"/C/Users/kurte/AppData/Local/Temp/availablebug-sender.ino",
		"/C/Users/kurte/AppData/Local/Temp/availablebug-receiver.ino",
		"/C/Users/kurte/AppData/Roaming/Sublime Text 3/Packages/WordHighlight/Word Highlight.sublime-settings",
		"/C/Users/kurte/AppData/Roaming/Sublime Text 3/Packages/User/Word Highlight.sublime-settings",
		"/C/Users/kurte/Documents/Arduino/Github/Open_CM_CR_Arduino_Sketches/Robotis_RC-100_Remote_test/Robotis_RC-100_Remote_test.ino",
		"/C/Users/kurte/AppData/Local/Temp/sketch_aug10a.ino",
		"/D/GitHub/Ra8876LiteTeensy/examples/RA8876_pictureEmbed/Teensy41_Cardlike.h",
		"/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/Makefile",
		"/C/Users/kurte/AppData/Local/Temp/teensy41_pins-1.txt",
		"/C/Users/kurte/AppData/Local/Temp/usb_private.h",
		"/C/Users/kurte/AppData/Local/Temp/usb-1.c",
		"/D/GitHub/Tset/TSet.cmd1",
		"/C/Users/kurte/AppData/Local/Temp/usb.c",
		"/D/GitHub/cores/usb_hid/usb.c",
		"/C/Users/kurte/AppData/Local/Temp/wzd3cf/spi_master_example/timo_spi.h",
		"/C/Users/kurte/Desktop/Buttseqs-master/sequencer.ino",
		"/C/Users/kurte/Documents/Arduino/libraries/TeensyTimerTool/library.properties",
		"/C/Users/kurte/AppData/Local/Temp/Snooze_SPI_issue.ino",
		"/C/Users/kurte/AppData/Local/Temp/wzba4c/spi_master_example/spi_master_example.ino",
		"/C/Users/kurte/AppData/Local/Temp/TeensyRTTY_June7th20.ino",
		"/C/Users/kurte/AppData/Local/Temp/main.cpp",
		"/D/GitHub/cores/teensy4/HardwareSerial8.cpp",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_445992/eram_spiffs_ili9488_UpdateAsyncCont_Test.ino.lst",
		"/C/Users/kurte/Desktop/foo.txt",
		"/C/Users/kurte/Documents/Arduino/Github/Open_CM_CR_Arduino_Sketches/Phantom_Phoenix_OpenCMR_Dynamixel2Arduino/_Phoenix_Code.h",
		"/D/GitHub/cores/teensy4/EventResponder.cpp",
		"/d/GitHub/teensy41_extram/extRAM_t4/extRAM_t4.h",
		"/C/arduino-1.8.12/hardware/tools/arm/bin/foo",
		"/C/Users/kurte/AppData/Local/Temp/arduino_build_604884/SPI_test_eventResponder.ino.lst"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 131.0,
		"where_history":
		[
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS",
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\MTP_t4\\src",
			"",
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\SdFs\\src",
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\SdFs",
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\SD\\src",
			"",
			"C:\\Users\\kurte\\Documents\\Arduino\\libraries\\LittleFS",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"formatStore",
			"100f",
			"format",
			"quick",
			"'f'",
			"format",
			"formatstore",
			"read",
			"lfs_file_write",
			"usb_mtp_sendevent(",
			"usb_mtp_sendevent",
			"sendevent",
			"sendobject",
			"pull_packet",
			"sendobjectinfo",
			"object_id",
			"MTP_SEND_OBJECT_YIELD",
			"response",
			"appendindexrecord",
			"openfilebyindex",
			"file_.is",
			"openfilebyindex",
			"ret",
			"openfilebyindex",
			"sd_open",
			"strlen",
			"sendobjectinfo",
			"filename",
			"sd_remove",
			"removefile",
			"header",
			"addfilesystem",
			"use_lfs_spi",
			"nand",
			"built",
			"nspifs",
			"use_lfs_nand",
			"nspifs",
			"use_lfs_",
			"qspi",
			"USE_LFS_NAND",
			"winbon",
			"spifs",
			"5,",
			"writenextsendobjectbuffer",
			"cbytes",
			"count_bytes_in_write_buffer",
			"WRL",
			"20",
			"21",
			"22",
			"23",
			"pinmode",
			"digitaltoggle",
			"digitalwritefast",
			"EVENT_RESPONDER_CYCLE",
			"imxrt",
			"yet",
			"ls",
			"format",
			"GetStorageInfo",
			"GetDevicePropDesc",
			"read_on_yield_writes_",
			"sd_addfilesystem",
			"addfilesystem",
			"dump",
			"getstorename",
			"sd_getstorename",
			"sd_addfilesystem",
			"ad_addfilesystem",
			"addfilesystem",
			"print",
			"printf",
			"getreadonyieldwrites",
			"MTP_SEND_OBJECT_YIELD",
			"read_on_yield_writes_",
			"addfilesystem",
			"getReadOnYieldWrites",
			"secondary",
			"disk_buffer",
			"MTP_SEND_OBJECT_YIELD",
			"addsendobjectbuffer",
			"setup",
			"teensy41",
			"receive_disk_pos",
			"sendobject_buffer_ptr_",
			"sizeof(disk_buffer_)",
			"sendobject_buffer_ptr_",
			"time_since_last_",
			"sendobject_buffer_ptr",
			"buffer_write_file_pointer_",
			"buffer_receive_pointer_",
			"big_buffer_size",
			"DISK_BUFFER_SIZE",
			"read_on_yield_writes",
			"sdx",
			"sd_getreadonyield",
			"readonyieldwrites",
			"sendobjectwithyield",
			"sendobject(",
			"//",
			"mtpd::sendobject",
			"sendobject",
			"sd_get",
			"slow",
			"sdslow",
			"slow_writes",
			"sendobjectinfo",
			"      storage_->ResetIndex();\n",
			"opensession",
			"formatstore",
			"mtpd_format_cb",
			"deleteobject",
			"reset",
			"100D",
			"100f",
			"formatstore",
			"mtpd.",
			"mtpd",
			"formatstore",
			"format",
			"resetindex",
			"opensession",
			"resetindex",
			"send_deviceresetevent",
			"record",
			"openfileindex",
			"sendobjectinfo"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"write",
			"Write",
			"event_responder_cycle_",
			"DISK_BUFFER_SIZE",
			"buffer_write_file_index_",
			"buffer_receive_index_",
			"total_buffer_size_",
			"YIELD_WRITE_SIZE",
			"read_on_yield_writes",
			"disk_buffer_",
			"$1",
			"total_bytes_written_",
			"sendObject_buffer_ptr_",
			"receive_event_elaped_mills_",
			"receive_disk_pos_",
			"receive_count_remaining_",
			"receive_eventresponder_",
			"big_buffer_",
			"big_buffer_ptr_",
			"buffer_receive_pointer_",
			"buffer_write_file_pointer_",
			"printf",
			"$1",
			"big_buffer_size",
			"big_buffer_ptr",
			"next_file_index_to_add",
			"path_parser",
			"ReadAndEchoSerialChar()"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mtp-test.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17938,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										10482,
										10482
									],
									[
										14841,
										14841
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								9104,
								9118
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5243.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/MTP.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7758,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										3153,
										3153
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								3197,
								3197
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1280.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/MTP.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87694,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										70171,
										70171
									],
									[
										73906,
										73906
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								73906,
								73906
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 35672.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/arduino-1.8.13/hardware/teensy/avr/cores/teensy4/wiring.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7456,
						"regions":
						{
						},
						"selection":
						[
							[
								4732,
								4732
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1578.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29460,
						"regions":
						{
						},
						"selection":
						[
							[
								7508,
								7508
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4024.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/LittleFS.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 15927,
						"regions":
						{
						},
						"selection":
						[
							[
								5981,
								5995
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3452.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6773,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										190,
										199
									],
									[
										413,
										422
									],
									[
										596,
										605
									],
									[
										848,
										857
									],
									[
										1258,
										1267
									],
									[
										1653,
										1671
									],
									[
										1819,
										1837
									],
									[
										2037,
										2055
									],
									[
										2263,
										2281
									],
									[
										2503,
										2521
									],
									[
										2757,
										2775
									],
									[
										2987,
										3005
									],
									[
										3324,
										3338
									],
									[
										3536,
										3550
									],
									[
										3692,
										3706
									],
									[
										3813,
										3827
									],
									[
										4077,
										4091
									],
									[
										4279,
										4293
									],
									[
										4458,
										4472
									],
									[
										4571,
										4585
									],
									[
										4770,
										4784
									],
									[
										4992,
										5006
									],
									[
										5226,
										5240
									],
									[
										5435,
										5449
									],
									[
										5641,
										5655
									],
									[
										5802,
										5816
									],
									[
										5989,
										6003
									],
									[
										6325,
										6339
									],
									[
										6588,
										6602
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3673,
								3679
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1721.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/LittleFS/src/littlefs/lfs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 152326,
						"regions":
						{
						},
						"selection":
						[
							[
								90669,
								90669
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 57644.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9267,
						"regions":
						{
						},
						"selection":
						[
							[
								2609,
								2609
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1204.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/src/Storage.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23882,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										4768,
										4768
									],
									[
										11153,
										11153
									],
									[
										23573,
										23573
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								10846,
								10846
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6504.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/GitHub/cores/teensy4/FS.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5008,
						"regions":
						{
						},
						"selection":
						[
							[
								4296,
								4296
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2489.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/Users/kurte/Documents/Arduino/libraries/MTP_t4/modifications_for_cores_teensy4/usb_desc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1871,
						"regions":
						{
						},
						"selection":
						[
							[
								1313,
								1313
							]
						],
						"settings":
						{
							"syntax": "Packages/Deviot (Arduino IDE)/deviot.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 45.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 229.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 315.0
	},
	"pinned_build_system": "Packages/User/Teensy.sublime-build",
	"project": "mtp-test.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"new",
				"opencr\\cores\\arduino\\new.cpp"
			],
			[
				"dyn",
				"opencr\\libraries\\DynamixelWorkbench\\src\\dynamixel_workbench_toolbox\\dynamixel_driver.cpp"
			],
			[
				"dig",
				"cores\\arduino\\digitalWriteFast.h"
			],
			[
				"timelib",
				"avr\\libraries\\Time\\TimeLib.h"
			],
			[
				"o",
				"opencr\\libraries\\OLLO\\OLLO.cpp"
			],
			[
				"sound.h",
				"opencr\\libraries\\turtlebot3_ros_lib\\turtlebot3_msgs\\Sound.h"
			],
			[
				"sensorstatemsg",
				"turtlebot3_msgs\\msg\\SensorState.msg"
			],
			[
				"ollo",
				"opencr\\libraries\\OLLO\\OLLO.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
